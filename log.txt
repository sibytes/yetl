DEBUG : 2022-10-26 08:25:25,794 : yetl.flow.metadata_repo._factory : _factory.py.register_metadata_repo_type: line(22) : Register metadata repo type <class 'yetl.flow.metadata_repo._metadata_file.MetadataFile'> as <class 'type'>
DEBUG : 2022-10-26 08:25:25,795 : yetl.flow.metadata_repo._factory : _factory.py.register_metadata_repo_type: line(22) : Register metadata repo type <class 'yetl.flow.metadata_repo._metadata_deltalake.MetadataDeltalake'> as <class 'type'>
INFO : 2022-10-26 08:25:25,795 : humanresourcesdepartment_landing_to_raw : _config_provider.py.load_config: line(57) : Loading Dataflow configuration from file /Users/shaunryan/AzureDevOps/yetl/config/environment/local.yaml
DEBUG : 2022-10-26 08:25:25,798 : humanresourcesdepartment_landing_to_raw : _config_provider.py.load_config: line(63) : {
    "datalake": "/Users/shaunryan/AzureDevOps/yetl/data",
    "datalake_protocol": "file:",
    "deltalake_schema_repo": {
        "deltalake_sql_file": {
            "deltalake_schema_root": "./config/schema"
        }
    },
    "metadata_repo": {
        "metadata_file": {
            "metadata_dataset": "dataset.json",
            "metadata_index": "index.json",
            "metadata_root": "./config/runs"
        }
    },
    "spark": {
        "park.sql.extensions": "io.delta.sql.DeltaSparkSessionExtension",
        "spark.databricks.delta.allowArbitraryProperties.enabled": true,
        "spark.databricks.delta.merge.repartitionBeforeWrite.enabled": true,
        "spark.jars.packages": "io.delta:delta-core_2.12:2.1.0",
        "spark.master": "local",
        "spark.sql.catalog.spark_catalog": "org.apache.spark.sql.delta.catalog.DeltaCatalog"
    },
    "spark_schema_repo": {
        "spark_schema_file": {
            "spark_schema_root": "./config/schema/spark"
        }
    }
}
INFO : 2022-10-26 08:25:25,798 : humanresourcesdepartment_landing_to_raw : _factory.py.get_file_system_type: line(50) : Setting filestystem using protocol file:
DEBUG : 2022-10-26 08:25:25,798 : humanresourcesdepartment_landing_to_raw : _factory.py.get_file_system_type: line(51) : Setting FileSystemType using type FileSystemType.FILE
INFO : 2022-10-26 08:25:25,798 : humanresourcesdepartment_landing_to_raw : _factory.py.get_metadata_repo_type: line(41) : Setting up metadata repo on metadata_file 
DEBUG : 2022-10-26 08:25:25,798 : humanresourcesdepartment_landing_to_raw : _factory.py.get_metadata_repo_type: line(43) : Setting MetadataRepoType using type MetadataRepoType.METADATA_FILE
INFO : 2022-10-26 08:25:25,798 : humanresourcesdepartment_landing_to_raw : _spark_context.py._get_spark_context: line(72) : Setting spark context
DEBUG : 2022-10-26 08:25:25,799 : humanresourcesdepartment_landing_to_raw : _spark_context.py._get_spark_context: line(76) : {
    "spark.master": "local",
    "spark.databricks.delta.allowArbitraryProperties.enabled": true,
    "spark.jars.packages": "io.delta:delta-core_2.12:2.1.0",
    "park.sql.extensions": "io.delta.sql.DeltaSparkSessionExtension",
    "spark.sql.catalog.spark_catalog": "org.apache.spark.sql.delta.catalog.DeltaCatalog",
    "spark.databricks.delta.merge.repartitionBeforeWrite.enabled": true
}
22/10/26 08:25:27 WARN Utils: Your hostname, Shauns-MacBook-Pro.local resolves to a loopback address: 127.0.0.1, but we couldn't find any external IP address!
22/10/26 08:25:27 WARN Utils: Set SPARK_LOCAL_IP if you need to bind to another address
:: loading settings :: url = jar:file:/Users/shaunryan/opt/spark-3.3.0-bin-hadoop3/jars/ivy-2.5.0.jar!/org/apache/ivy/core/settings/ivysettings.xml
22/10/26 08:25:28 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
22/10/26 08:25:28 WARN MacAddressUtil: Failed to find a usable hardware address from the network interfaces; using random bytes: 18:02:d9:3d:39:df:76:93
INFO : 2022-10-26 08:25:30,087 : humanresourcesdepartment_landing_to_raw : _spark_context.py.__init__: line(29) : Setting application context spark logger at level ERROR
INFO : 2022-10-26 08:25:30,099 : humanresourcesdepartment_landing_to_raw : _spark_context.py.__init__: line(34) : Checking spark and databricks versions
INFO : 2022-10-26 08:25:37,518 : humanresourcesdepartment_landing_to_raw : _spark_context.py.__init__: line(46) : Databricks Runtime version not detected.
INFO : 2022-10-26 08:25:37,519 : humanresourcesdepartment_landing_to_raw : _spark_context.py.__init__: line(48) : Spark version detected as : 3.3.0 f74867bddfbcdd4d08076db36851e88b15e66556
INFO : 2022-10-26 08:25:37,519 : humanresourcesdepartment_landing_to_raw : _spark_context.py.__init__: line(53) : Setting application context dataflow humanresourcesdepartment_landing_to_raw
INFO : 2022-10-26 08:25:37,519 : humanresourcesdepartment_landing_to_raw : _config_provider.py.load_pipeline_config: line(45) : Loading Dataflow configuration from file /Users/shaunryan/AzureDevOps/yetl/config/pipeline/humanresourcesdepartment_landing_to_raw.yaml
DEBUG : 2022-10-26 08:25:37,527 : humanresourcesdepartment_landing_to_raw : _config_provider.py.load_pipeline_config: line(49) : {
    "dataflow": {
        "adworks_landing": {
            "humanresourcesdepartment": {
                "exceptions": {
                    "database": "landing",
                    "path": "delta_lake/{{ table_name }}_exceptions",
                    "table": "{{ table_name }}_exceptions"
                },
                "file_date_format": "%Y%m%d",
                "format": "json",
                "path": "landing/adventureworks/{{ timeslice_path_date_format }}/*_humanresourcesdepartment_*_{{ timeslice_file_date_format }}.jsonl",
                "path_date_format": "%Y-%m-%d",
                "read": {
                    "auto": true,
                    "options": {
                        "header": true,
                        "inferSchema": false,
                        "mode": "PERMISSIVE"
                    }
                },
                "table": {
                    "properties": {
                        "yetl.metadata.filepathFilename": true,
                        "yetl.metadata.timeslice": "timeslice_path_date_format",
                        "yetl.schema.corrupt_record": true,
                        "yetl.schema.createIfNotExists": true
                    }
                },
                "thresholds": {
                    "error": {
                        "exception_count": 50,
                        "exception_percent": 80,
                        "max_rows": 100000000,
                        "min_rows": 0
                    },
                    "warning": {
                        "exception_count": 0,
                        "exception_percent": 0,
                        "max_rows": 1000,
                        "min_rows": 1
                    }
                },
                "type": "Reader"
            }
        },
        "adworks_raw": {
            "humanresourcesdepartment": {
                "format": "delta",
                "path": "delta_lake/adworks_raw/humanresourcesdepartment",
                "table": {
                    "ddl": "{{ root }}/deltalake",
                    "partitioned_by": [
                        "_partition_key"
                    ],
                    "properties": {
                        "delta.appendOnly": false,
                        "delta.checkpoint.writeStatsAsJson": true,
                        "delta.compatibility.symlinkFormatManifest.enabled": false,
                        "delta.dataSkippingNumIndexedCols": -1,
                        "delta.deletedFileRetentionDuration": "interval 1 week",
                        "delta.enableChangeDataFeed": true,
                        "delta.logRetentionDuration": "interval 30 days",
                        "delta.minReaderVersion": 1,
                        "delta.minWriterVersion": 2,
                        "delta.randomPrefixLength": 2,
                        "delta.randomizeFilePrefixes": false,
                        "yetl.schema.createIfNotExists": true
                    }
                },
                "type": "DeltaWriter",
                "write": {
                    "mode": "append",
                    "options": {
                        "mergeSchema": true
                    }
                }
            }
        }
    }
}
DEBUG : 2022-10-26 08:25:37,527 : humanresourcesdepartment_landing_to_raw : _spark_context.py._get_deltalake_flow: line(103) : Deserializing configuration into Dataflow
DEBUG : 2022-10-26 08:25:37,527 : humanresourcesdepartment_landing_to_raw : _i_dataflow.py.__init__: line(15) : initialise dataflow with config
DEBUG : 2022-10-26 08:25:37,527 : humanresourcesdepartment_landing_to_raw : _i_dataflow.py.__init__: line(16) : {
    "datalake": "/Users/shaunryan/AzureDevOps/yetl/data",
    "datalake_protocol": "file:",
    "spark": {
        "spark.master": "local",
        "spark.databricks.delta.allowArbitraryProperties.enabled": true,
        "spark.jars.packages": "io.delta:delta-core_2.12:2.1.0",
        "park.sql.extensions": "io.delta.sql.DeltaSparkSessionExtension",
        "spark.sql.catalog.spark_catalog": "org.apache.spark.sql.delta.catalog.DeltaCatalog",
        "spark.databricks.delta.merge.repartitionBeforeWrite.enabled": true
    },
    "spark_schema_repo": {
        "spark_schema_file": {
            "spark_schema_root": "./config/schema/spark"
        }
    },
    "deltalake_schema_repo": {
        "deltalake_sql_file": {
            "deltalake_schema_root": "./config/schema"
        }
    },
    "metadata_repo": {
        "metadata_file": {
            "metadata_root": "./config/runs",
            "metadata_dataset": "dataset.json",
            "metadata_index": "index.json"
        }
    }
}
DEBUG : 2022-10-26 08:25:37,528 : humanresourcesdepartment_landing_to_raw : _i_dataflow.py.__init__: line(18) : initialise dataflow with dataflow_config
DEBUG : 2022-10-26 08:25:37,528 : humanresourcesdepartment_landing_to_raw : _i_dataflow.py.__init__: line(19) : {
    "adworks_landing": {
        "humanresourcesdepartment": {
            "type": "Reader",
            "table": {
                "properties": {
                    "yetl.schema.createIfNotExists": true,
                    "yetl.schema.corrupt_record": true,
                    "yetl.metadata.timeslice": "timeslice_path_date_format",
                    "yetl.metadata.filepathFilename": true
                }
            },
            "path_date_format": "%Y-%m-%d",
            "file_date_format": "%Y%m%d",
            "format": "json",
            "path": "landing/adventureworks/{{ timeslice_path_date_format }}/*_humanresourcesdepartment_*_{{ timeslice_file_date_format }}.jsonl",
            "read": {
                "auto": true,
                "options": {
                    "mode": "PERMISSIVE",
                    "inferSchema": false,
                    "header": true
                }
            },
            "exceptions": {
                "path": "delta_lake/{{ table_name }}_exceptions",
                "database": "landing",
                "table": "{{ table_name }}_exceptions"
            },
            "thresholds": {
                "warning": {
                    "min_rows": 1,
                    "max_rows": 1000,
                    "exception_count": 0,
                    "exception_percent": 0
                },
                "error": {
                    "min_rows": 0,
                    "max_rows": 100000000,
                    "exception_count": 50,
                    "exception_percent": 80
                }
            }
        }
    },
    "adworks_raw": {
        "humanresourcesdepartment": {
            "type": "DeltaWriter",
            "table": {
                "partitioned_by": [
                    "_partition_key"
                ],
                "ddl": "{{ root }}/deltalake",
                "properties": {
                    "yetl.schema.createIfNotExists": true,
                    "delta.appendOnly": false,
                    "delta.checkpoint.writeStatsAsJson": true,
                    "delta.compatibility.symlinkFormatManifest.enabled": false,
                    "delta.dataSkippingNumIndexedCols": -1,
                    "delta.logRetentionDuration": "interval 30 days",
                    "delta.deletedFileRetentionDuration": "interval 1 week",
                    "delta.enableChangeDataFeed": true,
                    "delta.minReaderVersion": 1,
                    "delta.minWriterVersion": 2,
                    "delta.randomizeFilePrefixes": false,
                    "delta.randomPrefixLength": 2
                }
            },
            "format": "delta",
            "path": "delta_lake/adworks_raw/humanresourcesdepartment",
            "write": {
                "mode": "append",
                "options": {
                    "mergeSchema": true
                }
            }
        }
    }
}
INFO : 2022-10-26 08:25:37,531 : humanresourcesdepartment_landing_to_raw : _factory.py.get_schema_repo_type: line(39) : Setting up schema repo on spark_schema_file 
DEBUG : 2022-10-26 08:25:37,531 : humanresourcesdepartment_landing_to_raw : _factory.py.get_schema_repo_type: line(41) : Setting SchemaRepoType using type SchemaRepoType.SPARK_SCHEMA_FILE
DEBUG : 2022-10-26 08:25:37,531 : humanresourcesdepartment_landing_to_raw : _factory.py.get_file_system_type: line(57) : Setting FileSystemType using type FileSystemType.FILE
INFO : 2022-10-26 08:25:37,531 : humanresourcesdepartment_landing_to_raw : _spark_file_schema_repo.py.load_schema: line(63) : Loading schema for dataset adworks_landing.humanresourcesdepartment from /Users/shaunryan/AzureDevOps/yetl/config/schema/spark/adworks_landing/humanresourcesdepartment.yaml using <class 'yetl.flow.file_system._file_system.FileSystem'>
WARNING : 2022-10-26 08:25:37,531 : humanresourcesdepartment_landing_to_raw : _reader.py.__init__: line(77) : schema not found for adworks_landing.humanresourcesdepartment as path /Users/shaunryan/AzureDevOps/yetl/config/schema/spark/adworks_landing/humanresourcesdepartment.yaml
WARNING : 2022-10-26 08:25:37,531 : humanresourcesdepartment_landing_to_raw : _reader.py._on_schema_creation: line(190) : Creating inferred schema for adworks_landing.humanresourcesdepartment exceptions configuration will be ignored
WARNING : 2022-10-26 08:25:37,531 : humanresourcesdepartment_landing_to_raw : _reader.py._on_schema_creation: line(200) : Creating inferred schema for adworks_landing.humanresourcesdepartment PERMISSIVE configuration will be ignored
WARNING : 2022-10-26 08:25:37,531 : humanresourcesdepartment_landing_to_raw : _reader.py._on_schema_creation: line(205) : Creating inferred schema for adworks_landing.humanresourcesdepartment defaulting inferSchema to True
DEBUG : 2022-10-26 08:25:37,531 : humanresourcesdepartment_landing_to_raw : _dataflow.py.__init__: line(26) : Deserialized adworks_landing.humanresourcesdepartment configuration into <class 'yetl.flow.dataset._reader.Reader'>
DEBUG : 2022-10-26 08:25:37,531 : humanresourcesdepartment_landing_to_raw : _dataflow.py.append: line(43) : Appending source adworks_landing.humanresourcesdepartment as <class 'yetl.flow.dataset._reader.Reader'> to dataflow
INFO : 2022-10-26 08:25:37,532 : humanresourcesdepartment_landing_to_raw : _factory.py.get_schema_repo_type: line(39) : Setting up schema repo on deltalake_sql_file 
DEBUG : 2022-10-26 08:25:37,532 : humanresourcesdepartment_landing_to_raw : _factory.py.get_schema_repo_type: line(41) : Setting SchemaRepoType using type SchemaRepoType.DELTALAKE_SQL_FILE
DEBUG : 2022-10-26 08:25:37,533 : humanresourcesdepartment_landing_to_raw : _factory.py.get_file_system_type: line(57) : Setting FileSystemType using type FileSystemType.FILE
INFO : 2022-10-26 08:25:37,533 : humanresourcesdepartment_landing_to_raw : _deltalake_sql_file.py.load_schema: line(57) : Loading schema for dataset adworks_raw.humanresourcesdepartment from ./config/schema/deltalake/adworks_raw/humanresourcesdepartment.sql using <class 'yetl.flow.file_system._file_system.FileSystem'>
INFO : 2022-10-26 08:25:37,533 : humanresourcesdepartment_landing_to_raw : _deltalake_writer.py._get_table_sql: line(334) : ./config/schema/deltalake/adworks_raw/humanresourcesdepartment.sql, automatically creating SQL ddl schema.
DEBUG : 2022-10-26 08:25:37,533 : humanresourcesdepartment_landing_to_raw : _deltalake_writer.py.__init__: line(46) : DeltaWriter table ddl = None
DEBUG : 2022-10-26 08:25:37,533 : humanresourcesdepartment_landing_to_raw : _dataflow.py.__init__: line(26) : Deserialized adworks_raw.humanresourcesdepartment configuration into <class 'yetl.flow.dataset._deltalake_writer.DeltaWriter'>
DEBUG : 2022-10-26 08:25:37,533 : humanresourcesdepartment_landing_to_raw : _dataflow.py.append: line(49) : Appending destination adworks_raw.humanresourcesdepartment as <class 'yetl.flow.dataset._deltalake_writer.DeltaWriter'> to dataflow
INFO : 2022-10-26 08:25:37,533 : humanresourcesdepartment_landing_to_raw : _decorators.py.wrap_function: line(46) : Executing Dataflow humanresourcesdepartment_landing_to_raw with timeslice=2011-01-01 00:00:00.000000
ERROR : 2022-10-26 08:25:37,533 : humanresourcesdepartment_landing_to_raw : _decorators.py.wrap_function: line(60) : Dataflow application humanresourcesdepartment_landing_to_raw failed due to 'landing.humanresourcesdepartment'.
